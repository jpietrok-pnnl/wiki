{
  "title": "About Conclusion Plugin",
  "story": [
    {
      "type": "paragraph",
      "id": "72c17c0d47f23f93",
      "text": "The conclusion plugin works in conjunction with the statement plugin to display logical arguments or conclusions based on data."
    },
    {
      "type": "paragraph",
      "id": "b9492fabe98f2f94",
      "text": "Both the statement and conclusion plugins contain certainty factors, and both can set this value to a constant by typing \"GIVEN\" followed by any value -100 to 100."
    },
    {
      "type": "paragraph",
      "id": "0d76f7ab5708fdcc",
      "text": "The certainty factor is based on a -100 to 100 scale, and represents a level of certainty that the given statement is True."
    },
    {
      "type": "paragraph",
      "id": "f100fe7368692869",
      "text": "The conclusion plugin takes certainty factors from statements on the page and runs them through a formula (see below) to obtain its own certainty factor."
    },
    {
      "type": "conclusion",
      "id": "74642a402df6852c",
      "text": "This is what a Conclusion Plugin looks like (Gray box with black border)\n\nCF 80"
    },
    {
      "type": "pagefold",
      "id": "23b84369f6e91747",
      "text": "Formulas"
    },
    {
      "type": "paragraph",
      "id": "85f62e0b25c6a3fb",
      "text": "There are two formulas used by a conclusion plugin, each for a different scenario."
    },
    {
      "type": "paragraph",
      "id": "b0bcde879dec1985",
      "text": "The first (premise formula), is run when you want to take the conclusion's corresponding statements and draw a simple conclusion from them."
    },
    {
      "type": "paragraph",
      "id": "5ad057dc0a7fdd42",
      "text": "This formula requires the conclusion to be given a general certainty factor, as well as all the statements' values. This can be done using the keyword 'CF' in the conclusion text box"
    },
    {
      "type": "paragraph",
      "id": "928f478b5bea576b",
      "text": "This formula is as follows:"
    },
    {
      "type": "code",
      "id": "30c669c120e056d0",
      "text": "min(inputs) * CF / 100\n\n-> min() returns minimum value\n\n-> inputs is the set of certainty factors of              corresponding statements\n\n-> CF is the general CF given to the conclusion\n"
    },
    {
      "type": "paragraph",
      "id": "7cbb7bf46f599170",
      "text": "The second formula (consensus formula), should be used when your statements have the same meaning, but different values or contents. This is specified with the keyword 'NEW' in the conclusion textbox."
    },
    {
      "type": "paragraph",
      "id": "422df1ae02f6c576",
      "text": "An example of when this method is needed could be if you and 2 colleagues had a disagreement on what  value should be given to a certain statement. to compromise you create a conclusion which combines all of your statements into a sort of consensus. "
    },
    {
      "type": "code",
      "id": "dfe2d18dfa37b2d8",
      "text": "for(i = 1; i < inputs.length; i++){\n      var r1 = sum;\n      var r2 = inputs[i];\n      if(r1 > 0 && r2 > 0){\n        sum = (r1 + (r2 * ((100 - r1) / 100)));\n      }else if(r1 > 0 && r2 < 0){\n        sum = r1 + (r1 / (1 - Math.min(Math.abs(r1) , Math.abs(r2))));\n      }else if(r2 > 0 && r1 < 0){\n        sum = r1 + (r2 / (1 - Math.min(Math.abs(r2) , Math.abs(r1))));\n      }else if(r1 < 0 && r2 < 0){\n        r1 *= -1;\n        r2 *= -1;\n        sum = -1 * (r1 + ((r2*(100-r1))/100));\n      }\n    }\n    return sum;"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "About Conclusion Plugin",
        "story": [
          {
            "type": "paragraph",
            "id": "72c17c0d47f23f93",
            "text": "Here we describe the purpose of the plugin and include a sample."
          },
          {
            "type": "conclusion",
            "id": "74642a402df6852c",
            "text": "This is text in the new plugin. You can *double-click* to edit it too."
          }
        ]
      },
      "date": 1499267873000,
      "certificate": "from mkplugin.sh"
    },
    {
      "type": "edit",
      "id": "72c17c0d47f23f93",
      "item": {
        "type": "paragraph",
        "id": "72c17c0d47f23f93",
        "text": "TODO: write description for this pulgin"
      },
      "date": 1499708485060,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "74642a402df6852c",
      "item": {
        "type": "conclusion",
        "id": "74642a402df6852c",
        "text": "This is what a Conclusion Plugin looks like (Gray box with black border)"
      },
      "date": 1499795993596,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "74642a402df6852c",
      "item": {
        "type": "conclusion",
        "id": "74642a402df6852c",
        "text": "This is what a Conclusion Plugin looks like (Gray box with black border)\n\nCF 80"
      },
      "date": 1499796002813,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "72c17c0d47f23f93",
      "item": {
        "type": "paragraph",
        "id": "72c17c0d47f23f93",
        "text": "TODO: write description for this plugin"
      },
      "date": 1499796028476,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "72c17c0d47f23f93",
      "item": {
        "type": "paragraph",
        "id": "72c17c0d47f23f93",
        "text": "The conclusion plugin works in conjunction with the statement plugin to display logical arguments or conclusions based on data."
      },
      "date": 1499796628653,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "add",
      "id": "b9492fabe98f2f94",
      "item": {
        "type": "paragraph",
        "id": "b9492fabe98f2f94",
        "text": "Both the statement and conclusion plugins contain certainty factors, and both can set this value to a constant by typing \"GIVEN\" followed by any value -100 to 100."
      },
      "after": "72c17c0d47f23f93",
      "date": 1499796786584,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "add",
      "id": "0d76f7ab5708fdcc",
      "item": {
        "type": "paragraph",
        "id": "0d76f7ab5708fdcc",
        "text": "The certainty factor is based on a -100 to 100 scale, and represents a level of certainty that the given statement is True."
      },
      "after": "b9492fabe98f2f94",
      "date": 1499796869077,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "add",
      "id": "f100fe7368692869",
      "item": {
        "type": "paragraph",
        "id": "f100fe7368692869",
        "text": "The conclusion plugin takes certainty factors from other statement plugins on the page and runs them through a formula (see below) to obtain its own certainty factor"
      },
      "after": "0d76f7ab5708fdcc",
      "date": 1499796947123,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "23b84369f6e91747"
      },
      "id": "23b84369f6e91747",
      "type": "add",
      "after": "74642a402df6852c",
      "date": 1499797014289,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "23b84369f6e91747",
      "item": {
        "type": "pagefold",
        "id": "23b84369f6e91747",
        "text": "Formulas"
      },
      "date": 1499797019841,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "85f62e0b25c6a3fb"
      },
      "id": "85f62e0b25c6a3fb",
      "type": "add",
      "after": "23b84369f6e91747",
      "date": 1499797023519,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "85f62e0b25c6a3fb",
      "item": {
        "type": "paragraph",
        "id": "85f62e0b25c6a3fb",
        "text": "There are two formulas used by a conclusion plugin, each for a different scenario."
      },
      "date": 1499797047891,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "add",
      "id": "b0bcde879dec1985",
      "item": {
        "type": "paragraph",
        "id": "b0bcde879dec1985",
        "text": "The first (call it premise formula), is run when you want to simply take the corresponding statements and draw a simple conclusion from them"
      },
      "after": "85f62e0b25c6a3fb",
      "date": 1499797122487,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "b0bcde879dec1985",
      "item": {
        "type": "paragraph",
        "id": "b0bcde879dec1985",
        "text": "The first (premise formula), is run when you want to simply take the corresponding statements and draw a simple conclusion from them"
      },
      "date": 1499797128286,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "b0bcde879dec1985",
      "item": {
        "type": "paragraph",
        "id": "b0bcde879dec1985",
        "text": "The first (premise formula), is run when you want to take the corresponding statements and draw a simple conclusion from them"
      },
      "date": 1499797136799,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "b0bcde879dec1985",
      "item": {
        "type": "paragraph",
        "id": "b0bcde879dec1985",
        "text": "The first (premise formula), is run when you want to take the conclusion's corresponding statements and draw a simple conclusion from them"
      },
      "date": 1499797148286,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "b0bcde879dec1985",
      "item": {
        "type": "paragraph",
        "id": "b0bcde879dec1985",
        "text": "The first (premise formula), is run when you want to take the conclusion's corresponding statements and draw a simple conclusion from them."
      },
      "date": 1499797155885,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "928f478b5bea576b"
      },
      "id": "928f478b5bea576b",
      "type": "add",
      "after": "b0bcde879dec1985",
      "date": 1499797159477,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "928f478b5bea576b",
      "item": {
        "type": "paragraph",
        "id": "928f478b5bea576b",
        "text": "This formula is as follows, where min() returns the smallest parameter passed"
      },
      "date": 1499797218917,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "928f478b5bea576b",
      "item": {
        "type": "paragraph",
        "id": "928f478b5bea576b",
        "text": "This formula is as follows, where min() returns the smallest parameter passed:"
      },
      "date": 1499797222492,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "a04f1f786b0476bc"
      },
      "id": "a04f1f786b0476bc",
      "type": "add",
      "after": "928f478b5bea576b",
      "date": 1499797223188,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "remove",
      "id": "a04f1f786b0476bc",
      "date": 1499797229361,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "30c669c120e056d0"
      },
      "id": "30c669c120e056d0",
      "type": "add",
      "after": "928f478b5bea576b",
      "date": 1499797340555,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "30c669c120e056d0",
      "item": {
        "type": "code",
        "id": "30c669c120e056d0",
        "text": "min(inputs)"
      },
      "date": 1499797352661,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "928f478b5bea576b",
      "item": {
        "type": "paragraph",
        "id": "928f478b5bea576b",
        "text": "This formula is as follows, where 'min(') returns the smallest parameter passed, and 'inputs' are the set of certainty factors of corresponding statments:"
      },
      "date": 1499797385071,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "30c669c120e056d0",
      "item": {
        "type": "code",
        "id": "30c669c120e056d0",
        "text": "min(inputs) * CF / 100"
      },
      "date": 1499797404682,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "928f478b5bea576b",
      "item": {
        "type": "paragraph",
        "id": "928f478b5bea576b",
        "text": "This formula is as follows:"
      },
      "date": 1499797430336,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "30c669c120e056d0",
      "item": {
        "type": "code",
        "id": "30c669c120e056d0",
        "text": "min(inputs) * CF / 100\n\nwhere min() returns minimum value,\ninputs is the set of certainty factors of corresponding statements, and\nCF is the general CF given to the conclusion\n"
      },
      "date": 1499797509234,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "30c669c120e056d0",
      "item": {
        "type": "code",
        "id": "30c669c120e056d0",
        "text": "min(inputs) * CF / 100\n\n-> min() returns minimum value,\n-> inputs is the set of certainty factors of              corresponding statements, and\n-> CF is the general CF given to the conclusion\n"
      },
      "date": 1499797534222,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "30c669c120e056d0",
      "item": {
        "type": "code",
        "id": "30c669c120e056d0",
        "text": "min(inputs) * CF / 100\n\n-> min() returns minimum value\n\n-> inputs is the set of certainty factors of              corresponding statements\n\n-> CF is the general CF given to the conclusion\n"
      },
      "date": 1499797542589,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "f100fe7368692869",
      "item": {
        "type": "paragraph",
        "id": "f100fe7368692869",
        "text": "The conclusion plugin takes certainty factors from other statement plugins on the page and runs them through a formula, along with a 'general CF' given to the conclusion (see below) to obtain its own certainty factor"
      },
      "date": 1499797583059,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "f100fe7368692869",
      "item": {
        "type": "paragraph",
        "id": "f100fe7368692869",
        "text": "The conclusion plugin takes certainty factors from other statement plugins on the page and runs them through a formula (see below) to obtain its own certainty factor."
      },
      "date": 1499797599266,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "add",
      "id": "5ad057dc0a7fdd42",
      "item": {
        "type": "paragraph",
        "id": "5ad057dc0a7fdd42",
        "text": "This formula requires the conclusion to be given a general certainty factor, as well as all the statements' CF's. this can be done using the keyword 'CF' in the conclusion text box"
      },
      "after": "b0bcde879dec1985",
      "date": 1499797795800,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "5ad057dc0a7fdd42",
      "item": {
        "type": "paragraph",
        "id": "5ad057dc0a7fdd42",
        "text": "This formula requires the conclusion to be given a general certainty factor, as well as all the statements' values. this can be done using the keyword 'CF' in the conclusion text box"
      },
      "date": 1499797862525,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "7cbb7bf46f599170"
      },
      "id": "7cbb7bf46f599170",
      "type": "add",
      "after": "30c669c120e056d0",
      "date": 1499797875815,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "7cbb7bf46f599170",
      "item": {
        "type": "paragraph",
        "id": "7cbb7bf46f599170",
        "text": "The second formula (consensus formula), should be used when your statements have the same meaning, but different values or contents. This is specified with the keyword 'NEW' in the conclusion textbox."
      },
      "date": 1499798042614,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "add",
      "id": "422df1ae02f6c576",
      "item": {
        "type": "paragraph",
        "id": "422df1ae02f6c576",
        "text": "An example of when this method is needed could be if you and 2 colleagues had a disagreement on what  value should be given to a certain statement. to compromise you create a conclusion which combines all of your statements into a sort of consensus. "
      },
      "after": "7cbb7bf46f599170",
      "date": 1499798262706,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "3a4c06c2c58aa67c"
      },
      "id": "3a4c06c2c58aa67c",
      "type": "add",
      "after": "422df1ae02f6c576",
      "date": 1499798301598,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "remove",
      "id": "3a4c06c2c58aa67c",
      "date": 1499798304722,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "54414f9bc5830a76"
      },
      "id": "54414f9bc5830a76",
      "type": "add",
      "after": "422df1ae02f6c576",
      "date": 1499798307764,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "remove",
      "id": "54414f9bc5830a76",
      "date": 1499798319686,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "item": {
        "type": "factory",
        "id": "dfe2d18dfa37b2d8"
      },
      "id": "dfe2d18dfa37b2d8",
      "type": "add",
      "after": "422df1ae02f6c576",
      "date": 1499798327104,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "dfe2d18dfa37b2d8",
      "item": {
        "type": "code",
        "id": "dfe2d18dfa37b2d8",
        "text": "for(i = 1; i < inputs.length; i++){\n      var r1 = sum;\n      var r2 = inputs[i];\n      if(r1 > 0 && r2 > 0){\n        console.log(\"both numbers positive: \" + r1 + \" : \" + r2);\n        sum = (r1 + (r2 * ((100 - r1) / 100)));\n      }else if(r1 > 0 && r2 < 0){\n        console.log(\"numbers mixed\");\n        sum = r1 + (r1 / (1 - Math.min(Math.abs(r1) , Math.abs(r2))));\n      }else if(r2 > 0 && r1 < 0){\n        console.log(\"numbers mixed\");\n        sum = r1 + (r2 / (1 - Math.min(Math.abs(r2) , Math.abs(r1))));\n      }else if(r1 < 0 && r2 < 0){\n        console.log(\"both numbers negative\");\n        r1 *= -1;\n        r2 *= -1;\n        sum = -1 * (r1 + ((r2*(100-r1))/100));\n      }\n    }\n    return sum;"
      },
      "date": 1499798331536,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "dfe2d18dfa37b2d8",
      "item": {
        "type": "code",
        "id": "dfe2d18dfa37b2d8",
        "text": "for(i = 1; i < inputs.length; i++){\n      var r1 = sum;\n      var r2 = inputs[i];\n      if(r1 > 0 && r2 > 0){\n        sum = (r1 + (r2 * ((100 - r1) / 100)));\n      }else if(r1 > 0 && r2 < 0){\n        sum = r1 + (r1 / (1 - Math.min(Math.abs(r1) , Math.abs(r2))));\n      }else if(r2 > 0 && r1 < 0){\n        sum = r1 + (r2 / (1 - Math.min(Math.abs(r2) , Math.abs(r1))));\n      }else if(r1 < 0 && r2 < 0){\n        r1 *= -1;\n        r2 *= -1;\n        sum = -1 * (r1 + ((r2*(100-r1))/100));\n      }\n    }\n    return sum;"
      },
      "date": 1499798355358,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "edit",
      "id": "f100fe7368692869",
      "item": {
        "type": "paragraph",
        "id": "f100fe7368692869",
        "text": "The conclusion plugin takes certainty factors from statements on the page and runs them through a formula (see below) to obtain its own certainty factor."
      },
      "date": 1499798541957,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    }
  ],
  "plugin": "conclusion"
}